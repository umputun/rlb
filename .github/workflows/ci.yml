name: build

on:
  push:
    branches:
    tags:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: set up go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: checkout
        uses: actions/checkout@v2

      - name: build and test
        run: |
          export TZ="America/Chicago"
          go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov

      - name: install golangci-lint and goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.43.0
          GO111MODULE=off go get -u -v github.com/mattn/goveralls

      - name: run linters
        run: $GITHUB_WORKSPACE/golangci-lint run

      - name: submit coverage
        run: |
          export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          export GIT_TAG="${GITHUB_REF/refs\/tags\//}"
          if [[ "$GIT_TAG" != "$GITHUB_REF" ]]; then
            export GIT_BRANCH=$GIT_TAG
          fi
          echo "coverage for branch $GIT_BRANCH"
          $(go env GOPATH)/bin/goveralls -service="GitHub Action" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        env:
          COVERALLS_TOKEN: ${{secrets.COVERALLS_TOKEN}}

      - name: set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy master image to ghcr.io and dockerhub
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/${USERNAME}/rlb:${ref} -t ${USERNAME}/rlb:${ref} .

      - name: deploy tagged (latest) to ghcr.io and dockerhub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.PKG_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha}}
          GITHUB_REF: ${{ github.ref}}
        run: |
          ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo GITHUB_REF - $ref
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/${USERNAME}/rlb:${ref} -t ghcr.io/${USERNAME}/rlb:latest \
              -t ${USERNAME}/rlb:${ref} -t ${USERNAME}/rlb:latest .
